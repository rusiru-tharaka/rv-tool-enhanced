AWSTemplateFormatVersion: '2010-09-09'
Description: 'RVTool Enhanced UX - Database and Caching Infrastructure (Using Existing VPC)'

Parameters:
  Environment:
    Type: String
    Default: 'prod'
    AllowedValues: ['dev', 'staging', 'prod']
    Description: Environment name
  
  ProjectName:
    Type: String
    Default: 'rvtool-enhanced'
    Description: Project name for resource naming

  ExistingVpcId:
    Type: String
    Default: 'vpc-03c5b369587fd550f'
    Description: Existing VPC ID to use

  PublicSubnet1Id:
    Type: String
    Default: 'subnet-0410cb595777338d6'
    Description: Public subnet 1 ID for ALB

  PublicSubnet2Id:
    Type: String
    Default: 'subnet-0df2d723001e34687'
    Description: Public subnet 2 ID for ALB

  PrivateSubnet1Id:
    Type: String
    Default: 'subnet-09ec0d48a194d8ab5'
    Description: Private subnet 1 ID for database

  PrivateSubnet2Id:
    Type: String
    Default: 'subnet-06258a3e8e6dc7177'
    Description: Private subnet 2 ID for database

  DatabaseInstanceClass:
    Type: String
    Default: 'db.t3.micro'
    AllowedValues: ['db.t3.micro', 'db.t3.small', 'db.t3.medium', 'db.r5.large']
    Description: RDS instance class

  DatabaseAllocatedStorage:
    Type: Number
    Default: 20
    MinValue: 20
    MaxValue: 1000
    Description: Database allocated storage in GB

  RedisNodeType:
    Type: String
    Default: 'cache.t3.micro'
    AllowedValues: ['cache.t3.micro', 'cache.t3.small', 'cache.t3.medium', 'cache.r5.large']
    Description: ElastiCache Redis node type

Resources:
  # Security Groups
  DatabaseSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: !Sub '${ProjectName}-${Environment}-db-sg'
      GroupDescription: Security group for RDS database
      VpcId: !Ref ExistingVpcId
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 5432
          ToPort: 5432
          SourceSecurityGroupId: !Ref ECSSecurityGroup
          Description: PostgreSQL access from ECS
      Tags:
        - Key: Name
          Value: !Sub '${ProjectName}-${Environment}-db-sg'
        - Key: Environment
          Value: !Ref Environment

  RedisSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: !Sub '${ProjectName}-${Environment}-redis-sg'
      GroupDescription: Security group for ElastiCache Redis
      VpcId: !Ref ExistingVpcId
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 6379
          ToPort: 6379
          SourceSecurityGroupId: !Ref ECSSecurityGroup
          Description: Redis access from ECS
      Tags:
        - Key: Name
          Value: !Sub '${ProjectName}-${Environment}-redis-sg'
        - Key: Environment
          Value: !Ref Environment

  ECSSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: !Sub '${ProjectName}-${Environment}-ecs-sg'
      GroupDescription: Security group for ECS tasks
      VpcId: !Ref ExistingVpcId
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 8000
          ToPort: 8000
          SourceSecurityGroupId: !Ref ALBSecurityGroup
          Description: Backend API traffic from ALB
      Tags:
        - Key: Name
          Value: !Sub '${ProjectName}-${Environment}-ecs-sg'
        - Key: Environment
          Value: !Ref Environment

  ALBSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: !Sub '${ProjectName}-${Environment}-alb-sg'
      GroupDescription: Security group for Application Load Balancer
      VpcId: !Ref ExistingVpcId
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
          Description: HTTP traffic
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIp: 0.0.0.0/0
          Description: HTTPS traffic
      Tags:
        - Key: Name
          Value: !Sub '${ProjectName}-${Environment}-alb-sg'
        - Key: Environment
          Value: !Ref Environment

  # Database Subnet Group
  DatabaseSubnetGroup:
    Type: AWS::RDS::DBSubnetGroup
    Properties:
      DBSubnetGroupName: !Sub '${ProjectName}-${Environment}-db-subnet-group'
      DBSubnetGroupDescription: Subnet group for RDS database
      SubnetIds:
        - !Ref PrivateSubnet1Id
        - !Ref PrivateSubnet2Id
      Tags:
        - Key: Name
          Value: !Sub '${ProjectName}-${Environment}-db-subnet-group'
        - Key: Environment
          Value: !Ref Environment

  # Database Parameter Group
  DatabaseParameterGroup:
    Type: AWS::RDS::DBParameterGroup
    Properties:
      Family: postgres15
      Description: Parameter group for RVTool Enhanced PostgreSQL
      Parameters:
        shared_preload_libraries: 'pg_stat_statements'
        log_statement: 'all'
        log_min_duration_statement: 1000
        max_connections: 100
      Tags:
        - Key: Name
          Value: !Sub '${ProjectName}-${Environment}-db-params'
        - Key: Environment
          Value: !Ref Environment

  # Database Master Password Secret
  DatabaseMasterSecret:
    Type: AWS::SecretsManager::Secret
    Properties:
      Name: !Sub '${ProjectName}-${Environment}-db-master-password'
      Description: Master password for RVTool Enhanced database
      GenerateSecretString:
        SecretStringTemplate: '{"username": "rvtool_admin"}'
        GenerateStringKey: 'password'
        PasswordLength: 32
        ExcludeCharacters: '"@/\'
      Tags:
        - Key: Name
          Value: !Sub '${ProjectName}-${Environment}-db-secret'
        - Key: Environment
          Value: !Ref Environment

  # RDS PostgreSQL Database
  Database:
    Type: AWS::RDS::DBInstance
    DeletionPolicy: Snapshot
    Properties:
      DBInstanceIdentifier: !Sub '${ProjectName}-${Environment}-database'
      DBInstanceClass: !Ref DatabaseInstanceClass
      Engine: postgres
      EngineVersion: '15.4'
      AllocatedStorage: !Ref DatabaseAllocatedStorage
      StorageType: gp2
      StorageEncrypted: true
      
      DBName: rvtool_enhanced
      MasterUsername: !Sub '{{resolve:secretsmanager:${DatabaseMasterSecret}:SecretString:username}}'
      MasterUserPassword: !Sub '{{resolve:secretsmanager:${DatabaseMasterSecret}:SecretString:password}}'
      
      VPCSecurityGroups:
        - !Ref DatabaseSecurityGroup
      DBSubnetGroupName: !Ref DatabaseSubnetGroup
      DBParameterGroupName: !Ref DatabaseParameterGroup
      
      BackupRetentionPeriod: 7
      PreferredBackupWindow: '03:00-04:00'
      PreferredMaintenanceWindow: 'sun:04:00-sun:05:00'
      
      MultiAZ: !If [IsProd, true, false]
      PubliclyAccessible: false
      DeletionProtection: !If [IsProd, true, false]
      
      Tags:
        - Key: Name
          Value: !Sub '${ProjectName}-${Environment}-database'
        - Key: Environment
          Value: !Ref Environment
        - Key: Project
          Value: !Ref ProjectName

  # ElastiCache Subnet Group
  RedisSubnetGroup:
    Type: AWS::ElastiCache::SubnetGroup
    Properties:
      CacheSubnetGroupName: !Sub '${ProjectName}-${Environment}-redis-subnet-group'
      Description: Subnet group for ElastiCache Redis
      SubnetIds:
        - !Ref PrivateSubnet1Id
        - !Ref PrivateSubnet2Id

  # ElastiCache Parameter Group
  RedisParameterGroup:
    Type: AWS::ElastiCache::ParameterGroup
    Properties:
      CacheParameterGroupFamily: redis7
      Description: Parameter group for RVTool Enhanced Redis
      Properties:
        maxmemory-policy: allkeys-lru
        timeout: 300

  # ElastiCache Redis Cluster
  RedisCluster:
    Type: AWS::ElastiCache::ReplicationGroup
    Properties:
      ReplicationGroupId: !Sub '${ProjectName}-${Environment}-redis'
      ReplicationGroupDescription: Redis cluster for RVTool Enhanced session management
      
      NodeType: !Ref RedisNodeType
      Engine: redis
      EngineVersion: '7.0'
      
      NumCacheClusters: 2
      MultiAZEnabled: true
      AutomaticFailoverEnabled: true
      
      CacheSubnetGroupName: !Ref RedisSubnetGroup
      CacheParameterGroupName: !Ref RedisParameterGroup
      SecurityGroupIds:
        - !Ref RedisSecurityGroup
      
      AtRestEncryptionEnabled: true
      TransitEncryptionEnabled: true
      
      SnapshotRetentionLimit: 3
      SnapshotWindow: '03:00-05:00'
      PreferredMaintenanceWindow: 'sun:05:00-sun:07:00'
      
      Tags:
        - Key: Name
          Value: !Sub '${ProjectName}-${Environment}-redis'
        - Key: Environment
          Value: !Ref Environment
        - Key: Project
          Value: !Ref ProjectName

  # Application Database User Secret
  ApplicationDatabaseSecret:
    Type: AWS::SecretsManager::Secret
    Properties:
      Name: !Sub '${ProjectName}-${Environment}-app-db-credentials'
      Description: Application database credentials for RVTool Enhanced
      SecretString: !Sub |
        {
          "username": "rvtool_app",
          "password": "temp_password_to_be_updated",
          "engine": "postgres",
          "host": "${Database.Endpoint.Address}",
          "port": ${Database.Endpoint.Port},
          "dbname": "rvtool_enhanced",
          "dbInstanceIdentifier": "${Database}"
        }
      Tags:
        - Key: Name
          Value: !Sub '${ProjectName}-${Environment}-app-db-secret'
        - Key: Environment
          Value: !Ref Environment

Conditions:
  IsProd: !Equals [!Ref Environment, 'prod']

Outputs:
  DatabaseEndpoint:
    Description: RDS PostgreSQL endpoint
    Value: !GetAtt Database.Endpoint.Address
    Export:
      Name: !Sub '${ProjectName}-${Environment}-db-endpoint'

  DatabasePort:
    Description: RDS PostgreSQL port
    Value: !GetAtt Database.Endpoint.Port
    Export:
      Name: !Sub '${ProjectName}-${Environment}-db-port'

  DatabaseName:
    Description: Database name
    Value: rvtool_enhanced
    Export:
      Name: !Sub '${ProjectName}-${Environment}-db-name'

  DatabaseMasterSecretArn:
    Description: Database master secret ARN
    Value: !Ref DatabaseMasterSecret
    Export:
      Name: !Sub '${ProjectName}-${Environment}-db-master-secret-arn'

  ApplicationDatabaseSecretArn:
    Description: Application database secret ARN
    Value: !Ref ApplicationDatabaseSecret
    Export:
      Name: !Sub '${ProjectName}-${Environment}-app-db-secret-arn'

  RedisEndpoint:
    Description: ElastiCache Redis primary endpoint
    Value: !GetAtt RedisCluster.PrimaryEndPoint.Address
    Export:
      Name: !Sub '${ProjectName}-${Environment}-redis-endpoint'

  RedisPort:
    Description: ElastiCache Redis port
    Value: !GetAtt RedisCluster.PrimaryEndPoint.Port
    Export:
      Name: !Sub '${ProjectName}-${Environment}-redis-port'

  RedisReaderEndpoint:
    Description: ElastiCache Redis reader endpoint
    Value: !GetAtt RedisCluster.ReaderEndPoint.Address
    Export:
      Name: !Sub '${ProjectName}-${Environment}-redis-reader-endpoint'

  # Security Group Exports for other stacks
  ALBSecurityGroupId:
    Description: ALB Security Group ID
    Value: !Ref ALBSecurityGroup
    Export:
      Name: !Sub '${ProjectName}-${Environment}-alb-sg-id'

  ECSSecurityGroupId:
    Description: ECS Security Group ID
    Value: !Ref ECSSecurityGroup
    Export:
      Name: !Sub '${ProjectName}-${Environment}-ecs-sg-id'

  DatabaseSecurityGroupId:
    Description: Database Security Group ID
    Value: !Ref DatabaseSecurityGroup
    Export:
      Name: !Sub '${ProjectName}-${Environment}-db-sg-id'

  RedisSecurityGroupId:
    Description: Redis Security Group ID
    Value: !Ref RedisSecurityGroup
    Export:
      Name: !Sub '${ProjectName}-${Environment}-redis-sg-id'

  # VPC Information for other stacks
  VpcId:
    Description: VPC ID
    Value: !Ref ExistingVpcId
    Export:
      Name: !Sub '${ProjectName}-${Environment}-vpc-id'

  PrivateSubnet1Id:
    Description: Private Subnet 1 ID
    Value: !Ref PrivateSubnet1Id
    Export:
      Name: !Sub '${ProjectName}-${Environment}-private-subnet-1-id'

  PrivateSubnet2Id:
    Description: Private Subnet 2 ID
    Value: !Ref PrivateSubnet2Id
    Export:
      Name: !Sub '${ProjectName}-${Environment}-private-subnet-2-id'

  PublicSubnet1Id:
    Description: Public Subnet 1 ID
    Value: !Ref PublicSubnet1Id
    Export:
      Name: !Sub '${ProjectName}-${Environment}-public-subnet-1-id'

  PublicSubnet2Id:
    Description: Public Subnet 2 ID
    Value: !Ref PublicSubnet2Id
    Export:
      Name: !Sub '${ProjectName}-${Environment}-public-subnet-2-id'
